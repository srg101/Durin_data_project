---
title: "DURIN Trait Paper"
author: "Sonya Geange"
date: "04/04/2024"
format: 
  html:
    code-fold: false
    toc: true
    toc-location: left
    code-overflow: wrap
    fig-align: center
    fig-format: png
    fig-cap-location: bottom
    fig-dpi: 600
editor: visual
lightbox: auto

---

## DURIN Project Overview

The DURIN project focuses on the underappreciated roles of dwarf-shrubs in responding to and influencing global climate change. A fuller overview of the project and it's goals can be found here <https://betweenthefjords.w.uib.no/durin/>.

In brief:
The primary objective of the DURIN project is to provide critical new knowledge about an important but underrepresented plant functional type in climate-biosphere science; the dwarf-shrubs of the boreal, alpine, and arctic regions, and simultaneously provide a worked example of an integrated climate response-feedback research workflow. To that end, the secondary objectives are to:

* Examine variation in dwarf-shrubs physiological and growth responses to climate, and their impacts on microclimate (WP1);
* Map important species interactions, focusing on ericoid mycorrhizae (ErM) and quantifying key roles in dwarf-shrub carbon dynamics (WP2);
* Assess how environmental factors and vegetation characteristics impact ecosystem functioning and carbon dynamics (WP3);
* Use DURIN WP0-3 outcomes to parameterize dwarf-shrubs as a new plant functional type within a terrestrial ecosystem model (WP4);
* Create optimized data workflows using transparent, reproducible Open Science practices (WP5).

This work focuses on WP1 by analysing the plant functional traits collected during the summer season of 2023 at the four core sampling sites; Lygra, Sogndal, Senja and Kautokeino using the 'DURIN' plots.


## Trait Data Collection Overview

Here is a brief overview of the sampling collection for the DURIN sites during 2023, and the trait processing pipeline.

### Leaf collection
We collected one shoot from three individual shrubs of three of the four focal species in each DURIN plot between 14 June 2023 and 17 July 2023. *Calluna vulgaris* was immature at the first collection date, so we collected it separately on 11 September 2023 (Senja), 22 September (Sogndal), and 28 September 2023 (Lygra). We re-collected missing plants at Lygra on 27 July 2023, as well as three individuals from two DURIN plots of each species for comparison to the first collection dates. To avoid sampling ramets of a single shrub, we sampled from different portions of the plot where possible. We selected shoots with at least three representative leaves for the plot. For *Vaccinium vitis-idaea* and *Empentrum nigrum*, we selected shoots with at least three leaves grown this year (‘new leaves’) and at least three leaves grown last year (‘old leaves’). All leaves collected for *Vaccinium myrtillus* and *C. vulgaris* were new leaves. New leaves were fully expanded at time of collection. Shoots were stored in a sealed plastic bag with a moist paper towel in the field and during transport back to the lab, where the bagged shoots were stored at 4º C until processing.

In the lab, we removed three leaves from each shoot of *V. myrtillus* and *C. vulgaris* and six leaves (three new, three old) from each shoot of *V. vitis-idaea* and *E. nigrum*. Each leaf was processed separately for all traits except chemical analysis which was aggregated by individual plant. For *C. vulgaris*, we designated second season short shoots (see Mohamed and Gimingham 1970 figure 1) as a “leaf” following Ward et al. (2009) and Gaudio et al. (2011). Because of the small leaf size of *E. nigrum* and *C. vulgaris*, we counted multiple leaves (five individual leaves for *E. nigrum* and two short shoots for *C. vulgaris*) as a single bulk leaf for trait measurements. Leaves were stored in a sealed plastic bag with a moist paper towel until fresh matter traits were measured. Leaves were kept at 4º C when not actively being measured.

### Trait measurements
We measured plant functional traits using a modified protocol from Pérez-Harguindeguy et al. (2013): plant height, wet mass, leaf area, leaf thickness, dry mass, with plans to measure C and N content. Plant height was measured in the field as the standing shrub height before shoot collection. Wet mass was measured on a precision balance accurate to 0.0001 g (balance makes and models varied between sites). Leaf area was measured using a flatbed scanner and a semi-automated protocol based on an external Raspberry Pi computer to standardise measurements between different users. Leaf area was calculated using a modified version of the ‘LeafArea’ R package (Katabuchi, 2015). Leaf thickness was measured at three points on each leaf (or on three different leaves per bulk leaf for E. nigrum) using micrometres accurate to 0.001 mm. Leaves were then dried for 72 hrs at 65º C before dry mass measurements (following the same protocol as wet mass on a balance accurate to 0.00001 g). 



## Load packages and DURIN trait dataset from OSF

Our raw trait data is stored on the DURIN OSF, it can be downloaded here.

```{r}
#| message: false
#| warning: false
#### Load packages ----
library(tidyverse)      # data management and organization
# remotes::install_github("Between-the-Fjords/dataDownloader")
library(dataDownloader) # download functions for OSF
library(osfr)           # OSF authentication etc
library(readr)          # data read in options

# Data visualization or exporting options
library(ggplot2)        # plotting
library(ggh4x)          # additions for ggplot2 figures
library(viridis)        # colour schemes for ggplot
library(patchwork)      # figure rearranging functions
library(reshape2)       # visualization
library(cowplot)        # to arrange multiple plots in a figure
library(gcookbook)      # plotting options
# CRAN version
# devtools::install_github("johannesbjork/LaCroixColoR")
library(LaCroixColoR)   # colour options
library(ggpubr)         # exporting formats
library(scales)

# Analysis related
library(lme4)           # analysis
library(lmerTest)       # statistical comparisons for lme4 models
library(interactions)   # analysis and visualization of models
library(emmeans)        # analysis and visualization of models





# Define custom functions
`%notin%` <- Negate(`%in%`)

#### Load dataset from OSF ----
# Update to be own OSF authenticated code
osf_auth(Sys.getenv("OSF_AUTH"))

# Download current cleaned dataset from OSF
get_file(node = "f4v9t",
         file = "DURIN_clean.csv",
         path = "data/clean_data",
         remote_path = "Vegetation/clean_data")

# Read in a name
data_DURIN_raw_OSF <- read.csv("data/clean_data/DURIN_clean.csv", na.strings = c("", "NA"))
```

## Clean and tidy dataset

Reduce and rearrange the dataset to focus only on DURIN plots not the additionally sampled DroughtNet plots, and also on leaves collected during the 2023 summer field sampling campaign. Add meta-data columns for leafID's with concatenated names.

Check for issues with duplicates.

Relabel and re-level key variables, and factors.

```{r}
# Create subsetted wide dataset for DURIN plots only and relevant attributes
data_DURIN <- data_DURIN_raw_OSF %>%
  filter(project == "Field - Traits") %>% # Only select from trait not physiology work
  drop_na(DURIN_plot) %>%  # Ignore the DroughtNet Treatments for now
  # Select key columns only - first by rearranging dataset so all traits together
  relocate(c(leaf_area, SLA, dry_mass_g, wet_mass_g, LDMC, leaf_thickness_1_mm:leaf_thickness_3_mm), .after = leaf_age) %>%
  select(envelope_ID, siteID, habitat, plotNR, DURIN_plot, species, plant_nr, leaf_nr, calluna_shoot_type, leaf_age:leaf_thickness_3_mm, plant_height)


#### Data Organization ####


# Add concatenated name for leaf ID
data_DURIN$uniqueleafID <- paste0(data_DURIN$DURIN_plot, "_",data_DURIN$plant_nr,"_", data_DURIN$leaf_age,"_", data_DURIN$calluna_shoot_type, "_", data_DURIN$leaf_nr)

# Alternative version using individual components for DURIN_plot
# Add species without white space column
data_DURIN$species_ws <- gsub(" ", "_", data_DURIN$species)
data_DURIN$uniqueleafID_V2 <- paste0(data_DURIN$siteID,"_",data_DURIN$habitat,"_", data_DURIN$species_ws, "_", data_DURIN$plotNR, "_",data_DURIN$plant_nr,"_", data_DURIN$leaf_age,"_", data_DURIN$calluna_shoot_type, "_", data_DURIN$leaf_nr)

#TODO: Check duplicates

# Need balanced data - so check out how many individual there are per sites/treatment etc
individual_count <- data_DURIN %>% 
  group_by(DURIN_plot, plant_nr, leaf_age, calluna_shoot_type,leaf_nr) %>% 
  summarize(n = n())
# Check using concatenated code alternative
individual_count_v2 <- data_DURIN %>% 
  group_by(uniqueleafID) %>% 
  summarize(n = n())

# Still seems to be quite a few situations where we have multiple leaves/envelopes for the same site, habitat, plot, plant, leaf age, shoot type, leaf number.
# Highlight those with more than 2 records
individual_issues <- data_DURIN %>% 
  group_by(uniqueleafID) %>% 
  summarize(n = n()) %>% 
  filter(n >1)

# Create mini-dataset for just the ones with these issues
issue_IDs <- unique(individual_issues$uniqueleafID)
data_DURIN_individual_issues <- data_DURIN %>% 
  filter(uniqueleafID %in% issue_IDs)
# write.csv(data_DURIN_individual_issues, "/output/data_DURIN_individual_issues.csv")
  
# Remove these problematic ones for now, COME BACK TO LATER ON!
data_DURIN_clean <- data_DURIN %>% 
  filter(uniqueleafID %notin% issue_IDs)


# Long format version of dataset
data_DURIN_long <- data_DURIN_clean %>% 
  pivot_longer(cols = leaf_area:plant_height, names_to = "trait", values_to = "value")

# Note, we have up to three measures for leaf thickness, and only one measure of each other trait
data_DURIN_long <- data_DURIN_long %>% 
  mutate(trait = replace(trait,
                         trait == "leaf_thickness_1_mm" | trait == "leaf_thickness_2_mm" | trait == "leaf_thickness_3_mm",
                         "leaf_thickness"))

# Reorder the levels of our factors, so no longer just alphabetical
data_DURIN_long <- data_DURIN_long %>% 
  mutate(leaf_age = factor(leaf_age, levels = c("young", "old"),
                    labels = c("Young", "Old"))) %>% 
           mutate(trait = factor(trait, levels = c("leaf_area", "SLA", "LDMC", "dry_mass_g",
                                                   "leaf_thickness","wet_mass_g", "plant_height"),
                 labels = c("Leaf area (cm^2)", "SLA (cm^2/g)", "LDMC (mg/g)", "Dry mass (g)",
                            "Leaf thickness (mm)", "Wet mass (g)", "Plant Height (cm)")))

# Drop rows with NA values for traits
data_DURIN_long <- data_DURIN_long %>% 
  drop_na(value)


##### Add some new columns to describe the experimental set-up ----
# Lygra and Senja as our coastal sites, and Sogndal and Kautokeino as our inland sites
# Lygra and Songdal as our southern sites, and Kautokeino and Senja as our northern sites
data_DURIN_long <- data_DURIN_long %>% 
  mutate(north_south = factor(siteID, levels = c("Lygra", "Senja", "Sogndal", "Kautokeino"),
                              labels = c("South", "North", "South", "North"))) %>% 
    mutate(coast_inland = factor(siteID, levels = c("Lygra", "Senja", "Sogndal", "Kautokeino"),
                              labels = c("Coast", "Coast", "Inland", "Inland")))
```

## Initial visualization

Overview plots of all the traits together when considering young leaves only. Focus is on identifying outliers or missing datasets. **Note: There are no sampled Calluna vulgaris leaves from Kautokeino.**

Figures are all designed so that if clicked, they will expand to full screen for better visualization.

```{r}
#| label: fig-ExploratoryOne
#| fig-cap: "Exploratory boxplot for all plant functional traits measured on young leaves. Values are averaged across habitats (open and forested) per species, a) leaf area, b) SLA, c) LDMC, d) dry mass, e) leaf thickness and f) plant height."
#| fig-width: 12
#| fig-height: 7
#| message: false
#| warning: false
#| lightbox:
#|   group: r-graph
#|   description: Exploratory boxplot for all plant functional traits averaged across habitats per species.


## Plot  traits together, ignoring site for now, only include young leaves ----
(ggplot(data_DURIN_long %>% 
         filter(trait %in% c("Leaf area (cm^2)", "SLA (cm^2/g)", "LDMC (mg/g)",
                             "Dry mass (g)", "Leaf thickness (mm)", "Plant Height (cm)")
                 & leaf_age == "Young"), 
         # drop_na(leaf_age),
       aes(x = habitat, y = value, fill = species, color = species)) +
  geom_point(position = position_jitterdodge(jitter.width = 0.2), alpha = 0.3) +
  geom_boxplot(outlier.shape = NA, alpha = 0.7) +
  scale_x_discrete(guide = "axis_nested") +
  scale_fill_viridis(discrete=T) +
  scale_color_viridis(discrete=T) +
  # scale_y_log10() +
  facet_nested(species ~ trait, scales = "free", independent = "y",
               nest_line = element_line(linetype = 2)) +
  labs(x = "Habitat", fill = "Species") +
  guides(color = "none") + # Remove the colour legend as same as fill anyhow
  theme_bw() +
  theme(strip.background = element_blank(),
        ggh4x.facet.nestline = element_line(colour = "black"),
        axis.text.x = element_text(angle = 45, vjust = 1.2, hjust = 1.2)))
```


```{r}
#| label: fig-ExploratoryTwo
#| fig-cap: "Exploratory boxplots of all plant functional traits together with a) Site x species comparisons and b) Site x habitat comparisons."
#| fig-subcap: 
#|      - "Site x species"
#|      - "Site x habitat"
#| layout-nrow: 2
#| fig-width: 12
#| fig-height: 7
#| lightbox:
#|   group: r-graph
#|   description: Exploratory boxplots of all plant functional traits together with a) Site x species comparisons and b) Site x habitat comparisons.

## Plot  traits together, with site as a grouping factor, only young leaves - Version 1 ----
(ggplot(data_DURIN_long %>% 
         filter(trait %in% c("Leaf area (cm^2)", "SLA (cm^2/g)", "LDMC (mg/g)",
                             "Dry mass (g)", "Leaf thickness (mm)", "Plant Height (cm)")
                & leaf_age == "Young"), 
         # drop_na(leaf_age),
       aes(x = habitat, y = value, fill = siteID, color = siteID)) +
  geom_point(position = position_jitterdodge(jitter.width = 0.2), alpha = 0.3) +
  geom_boxplot(outlier.shape = NA, alpha = 0.7) +
  scale_x_discrete(guide = "axis_nested") +
  scale_fill_viridis(discrete=T) +
  scale_color_viridis(discrete=T) +
  # scale_y_log10() +
  facet_nested(species ~ trait, scales = "free", independent = "y",
               nest_line = element_line(linetype = 2)) +
  labs(x = "Habitat", fill = "SiteID") +
  guides(color = "none") + # Remove the colour legend as same as fill anyhow
  theme_bw() +
  theme(strip.background = element_blank(),
        ggh4x.facet.nestline = element_line(colour = "black"),
        axis.text.x = element_text(angle = 45, vjust = 1.2, hjust = 1.2)))


# Plot  traits together, with site as a grouping factor, only young leaves - Version 2 ----
(ggplot(data_DURIN_long %>% 
         filter(trait %in% c("Leaf area (cm^2)", "SLA (cm^2/g)", "LDMC (mg/g)",
                             "Dry mass (g)", "Leaf thickness (mm)", "Plant Height (cm)")
                & leaf_age == "Young"), 
         # drop_na(leaf_age),
       aes(x = siteID, y = value, fill = habitat, color = habitat)) +
  geom_point(position = position_jitterdodge(jitter.width = 0.2), alpha = 0.3) +
  geom_boxplot(outlier.shape = NA, alpha = 0.7) +
  scale_x_discrete(guide = "axis_nested") +
  scale_fill_viridis(discrete=T) +
  scale_color_viridis(discrete=T) +
  # scale_y_log10() +
  facet_nested(species ~ trait, scales = "free", independent = "y",
               nest_line = element_line(linetype = 2)) +
  labs(x = "DURIN Site", y = "Trait Value", fill = "Habitat", color = NA) +
  guides(color = "none") + # Remove the colour legend as same as fill anyhow
  theme_bw() +
  #coord_flip() +
  theme(strip.background = element_blank(),
        ggh4x.facet.nestline = element_line(colour = "black"),
        axis.text.x = element_text(angle = 45, vjust = 1.2, hjust = 1.2)))
```

```{r}
#| label: Fig-ExploratoryThree
#| fig-cap: "Exploratory boxplots of all plant functional traits together, with a) Species x habitat and b) Habtiat x leaf age comparisons."
#| fig-subcap: 
#|      - "Species x habitat"
#|      - "Habitat x leaf age"
#| layout-nrow: 2
#| fig-width: 12
#| fig-height: 7
#| lightbox:
#|   group: r-graph
#|   description: Exploratory boxplots of all plant functional traits together, with a) Species x habitat and b) Habtiat x leaf age comparisons.


# Plot  traits together, with site and leaf age as a grouping factors - Version 1 ----
(ggplot(data_DURIN_long %>% 
         filter(trait %in% c("Leaf area (cm^2)", "SLA (cm^2/g)", "LDMC (mg/g)",
                             "Dry mass (g)", "Leaf thickness (mm)", "Plant Height (cm)")), 
         # drop_na(leaf_age),
       aes(x = species, y = value, fill = habitat, color = habitat)) +
  geom_point(position = position_jitterdodge(jitter.width = 0.2), alpha = 0.3) +
  geom_boxplot(aes(), outlier.shape = NA, alpha = 0.7) +
  scale_x_discrete(guide = "axis_nested") +
  scale_fill_viridis(discrete=T) +
  scale_color_viridis(discrete=T) +
  # scale_y_log10() +
  facet_nested(siteID + leaf_age ~ trait, scales = "free", independent = "y",
               nest_line = element_line(linetype = 2)) +
  labs(x = "DURIN Site", y = "Trait Value", fill = "Habitat", color = NA) +
  guides(color = "none") + # Remove the colour legend as same as fill anyhow
  theme_bw() +
  #coord_flip() +
  theme(strip.background = element_blank(),
        ggh4x.facet.nestline = element_line(colour = "black"),
        axis.text.x = element_text(angle = 45, vjust = 0.99, hjust = 1)))

# Plot  traits together, with site and leaf age as a grouping factors - Version 2 ----
# Restricted to only two species with young and old leaf traits, EN and VV
(ggplot(data_DURIN_long %>% 
         filter(trait %in% c("Leaf area (cm^2)", "SLA (cm^2/g)", "LDMC (mg/g)",
                             "Dry mass (g)", "Leaf thickness (mm)")
                & species %in% c("Empetrum nigrum","Vaccinium vitis-idaea")), 
         # drop_na(leaf_age),
       aes(x = habitat, y = value, fill = leaf_age, color = leaf_age)) +
  geom_point(position = position_jitterdodge(jitter.width = 0.2), alpha = 0.3) +
  geom_boxplot(aes(), outlier.shape = NA, alpha = 0.7) +
  scale_x_discrete(guide = "axis_nested") +
  scale_fill_viridis(discrete=T) +
  scale_color_viridis(discrete=T) +
  # scale_y_log10() +
  facet_nested(siteID + species ~ trait, scales = "free", independent = "y",
               nest_line = element_line(linetype = 2)) +
  labs(x = "DURIN Site", y = "Trait Value", fill = "Habitat", color = NA) +
  guides(color = "none") + # Remove the colour legend as same as fill anyhow
  theme_bw() +
  #coord_flip() +
  theme(strip.background = element_blank(),
        ggh4x.facet.nestline = element_line(colour = "black"),
        axis.text.x = element_text(angle = 45, vjust = 0.99, hjust = 1)))
```


## Analyses

## Define colour palettes for outputs

```{r}
ggsave <- function(..., bg = 'white') ggplot2::ggsave(..., bg = bg)
# Define colour palette
Habitat <- c("Forested" = "#083508", "Open" = "#589758")
Species <- c("Calluna vulgaris" = "#eb5461",  # berry colour option "#DF697E"
             "Empetrum nigrum" = "#f08e51",   # berry colour option "#404040"
             "Vaccinium myrtillus" = "#087e8b",   # berry colour option "#323284"
             "Vaccinium vitis-idaea" = 	"#8bcfb1") # berry colour option "#D93137"
siteID <- c("Lygra" = "#4A235A",
            "Sogndal" = "#154360",
            "Senja" = "#C39BD3",
            "Kautokeino" = "#5499C7")
```




### Check normality of datasets

```{r}
#| label: Fig-ExploratoryHistograms
#| fig-cap: "Exploratory histograms of all plant functional traits together, with a) Species x habitat and b) Habtiat x leaf age comparisons."
#| fig-subcap: 
#|      - "Species x siteID"
#|      - "Species x siteID (log transformed)"
#|      - "Species x siteID x habitat (natural log transformed)"
#|      - "Habitat x species x siteID (natural log transformed)"
#| layout-nrow: 2
#| layout-ncol: 2
#| fig-width: 12
#| fig-height: 7
#| lightbox:
#|   group: r-graph
#|   description: Exploratory boxplots of all plant functional traits together, with a) Species x habitat and b) Habtiat x leaf age comparisons.
# Task: Perform variance analysis of traits

# Sets a theme for the plots
blank_theme <- theme(panel.grid.major = element_blank(), #removes major axis grid lines
                     panel.grid.minor = element_blank(), #removes minor axis grid lines
                     panel.background = element_blank(), #removes the default grey background
                     legend.key = element_blank(), #removes background behind legend keys
                     axis.line = element_line(colour = "black"), #makes axis lines black
                     text = element_text (size = 15), #sets all text size to 20 
                     axis.text = element_text(size = 12)) #sets axis text to size 15  


# Use long dataset
#plotting a histogram for each trait to determine if the data is skewed
# TODO: Some outliers to fix

(data_DURIN_long %>% 
  ggplot(aes(x = value, fill = siteID)) +
  geom_density(alpha = 0.2) +
  facet_nested(species ~ trait, scales = "free", independent = "all") +
   scale_fill_manual(values = siteID) +
   scale_color_manual(values = siteID) +
  labs(title = "Trait Distribution"))

#log transforming traits because of skew
data_DURIN_long_log <- data_DURIN_long %>% 
  mutate(value = log(value))

#plotting log transformed traits to confirm skew is gone
(data_DURIN_long_log %>% 
  ggplot(aes(x = value, fill = siteID)) +
  geom_density(alpha = 0.2) +
  facet_nested(species ~ trait, scales = "free", independent = "all") +
  scale_fill_manual(values = siteID) +
  scale_color_manual(values = siteID) +
  labs(title = "Trait Distribution Log (natural)"))

#plotting log transformed traits to confirm skew is gone
# With habitat in as well
(data_DURIN_long_log %>% 
  ggplot(aes(x = value, fill = species)) +
  geom_density(alpha = 0.2) +
  facet_nested(siteID+habitat ~ trait, scales = "free", independent = "all") +
  labs(title = "Trait Distribution 2.0 Log (natural)") +
  scale_fill_manual(values = Species) +
  scale_color_manual(values = Species) +
  theme_minimal())

#plotting log transformed traits to confirm skew is gone
# With habitat in as well
(data_DURIN_long_log %>% 
  ggplot(aes(x = value, fill = habitat)) +
  geom_density(alpha = 0.2) +
  facet_nested(species*siteID ~ trait, scales = "free", independent = "none") +
  labs(title = "Trait Distribution 3.0 Log (natural)") +
  scale_fill_manual(values = Habitat) +
  scale_color_manual(values = Habitat) +
  theme_minimal())

```

## Variance Partitioning

To understand the relative variation in trait expression between species, sites, habitats, individuals, we run a variance partitioning excercise. 

```{r}

#| label: Fig-VarPart1
#| fig-cap: "Variance partitioning plot for a) plant height and b) leaf traits. Also presented is c) a combined plot for height and leaf traits."
#| fig-subcap: 
#|      - "Species x siteID"
#|      - "Species x siteID (log transformed)"
#|      - "Species x siteID x habitat (natural log transformed)"
#| fig-width: 1209
#| fig-height: 680
#| layout: [[45,-10, 45], [100]]
#| lightbox:
#|   group: r-graph
#|   description: Exploratory boxplots of all plant functional traits together, with a) Species x habitat and b) Habtiat x leaf age comparisons.
#|   
#### Model Structure 2 - species/siteID/habitat/plant_nr ####
# Here, we have leaves as the final level along with unexplained variation.


output2 <- data.frame(NULL)
for(i in unique(data_DURIN_long_log$trait)){
  #This code all comes from Julie Messier's web site
  mod2<-lmer(value~1+(1|species/siteID/habitat/plant_nr), 
            data=data_DURIN_long_log %>% filter(trait == i), 
            na.action=na.omit)
  variances2<-c(unlist(lapply(VarCorr(mod2),diag)), 
               attr(VarCorr(mod2),"sc")^2) #get variances
  
  var.comp2<-variances2/sum(variances2)
  
  var.comp2<-as.data.frame(var.comp2) #creates a dataframe from the values
  var.comp2<-cbind(rownames(var.comp2),data.frame(var.comp2,row.names=NULL)) #changes row names into a column
  var.comp2<-melt(var.comp2,value.name="value") #makes var.comp into a variable
  names(var.comp2)[1]<-"Scale" #changes the first column name to "scale"
  
  var.comp2$value<-var.comp2$value *100 #changes values into % 
  
  var.comp2<- var.comp2 %>%
    mutate(Scale = plyr::mapvalues(Scale, from = c(""), to = c("Within Individual and Unexplained"))) %>% 
    mutate(Scale = factor(Scale, levels = c("Within Individual and Unexplained","plant_nr:(habitat:(siteID:species)).(Intercept)","habitat:(siteID:species).(Intercept)","siteID:species.(Intercept)","species.(Intercept)"))) %>% 
    # group_by(variable)%>%
    arrange(variable, Scale)%>%
    mutate(labypos=100-(cumsum(value)-0.5*value)) %>%
    #subset(value>1) %>% #this line removes variance partitioning less than 1% so that there are no zero labels
    mutate(trait = i)
  
  output2 <- bind_rows(output2, var.comp2)
} 

# We don't want plant height, as it's only recorded to individual level not within individual level
# Remove height rows
DURIN_VarPart_Leaves <- output2 %>% 
  filter(trait != "Plant Height (cm)")



#Colour palette for graph: https://paletton.com/#uid=54n140kjJo3hfJliyuOl7gxlT9k
#Colour palette is in low saturation 
#Variance Partitioning Plot 2 
VP_legend_title <- "Leaf Traits: Ecological Scales"
VP_Plot2<-ggplot(DURIN_VarPart_Leaves, 
                 aes(x=trait, y=value))+
  geom_col(aes(fill=Scale))+
  geom_text(aes(y=labypos, label=round(value,digits = 1)),colour="white", size = 5)+
  scale_fill_manual (VP_legend_title, values = c("#86b4ce","#4F93B8","#306489","#222B4C","#AD8CAE"),
                    #values = c("#77293e","#ae435f","#f27092","#543a83","#37245a"),
                     labels = c("Within individual + Unexplained",
                                "Between individuals within habitat/site/species",
                                "Between habitats within sites within species",
                                "Between sites within species",
                                "Between species"))+
  ylab("Proportion of Variance (%)")+
  xlab("Log (natural) Transformed Traits")+
  blank_theme+
  coord_flip() +
  labs(fill = "Leaf Traits: Ecological Scale")+
  scale_y_continuous(expand=c(0,0),limits=c(0,100.1))+#this forces the graph to actually start at 0% and end at 100%
  scale_x_discrete(limits = c("Leaf area (cm^2)", "Dry mass (g)", "SLA (cm^2/g)",
                              "LDMC (mg/g)", "Wet mass (g)")) +
  theme(axis.text.x = element_text(angle = 300, hjust = 0))
VP_Plot2


# Model without within individual variation
output3 <- data.frame(NULL)
for(i in unique(data_DURIN_long_log$trait)){
  #This code all comes from Julie Messier's web site
  mod3<-lmer(value~1+(1|species/siteID/habitat), 
            data=data_DURIN_long_log %>% filter(trait == i), 
            na.action=na.omit)
  variances3<-c(unlist(lapply(VarCorr(mod3),diag)), 
               attr(VarCorr(mod3),"sc")^2) #get variances
  
  var.comp3<-variances3/sum(variances3)
  
  var.comp3<-as.data.frame(var.comp3) #creates a dataframe from the values
  var.comp3<-cbind(rownames(var.comp3),data.frame(var.comp3,row.names=NULL)) #changes row names into a column
  var.comp3<-melt(var.comp3,value.name="value") #makes var.comp into a variable
  names(var.comp3)[1]<-"Scale" #changes the first column name to "scale"
  
  var.comp3$value<-var.comp3$value *100 #changes values into % 
  
  var.comp3<- var.comp3 %>%
    mutate(Scale = plyr::mapvalues(Scale, from = c(""), to = c("Between Individuals and Unexplained"))) %>% 
    mutate(Scale = factor(Scale, levels = c("Between Individuals and Unexplained","habitat:(siteID:species).(Intercept)","siteID:species.(Intercept)","species.(Intercept)"))) %>% 
    # group_by(variable)%>%
    arrange(variable, Scale)%>%
    mutate(labypos=100-(cumsum(value)-0.5*value)) %>%
    #subset(value>1) %>% #this line removes variance partitioning less than 1% so that there are no zero labels
    mutate(trait = i)
  
  output3 <- bind_rows(output3, var.comp3)
} 



#Colour palette for graph: https://paletton.com/#uid=54n140kjJo3hfJliyuOl7gxlT9k
#Colour palette is in low saturation 
#Variance Partitioning Plot 3 

# We don't want plant height, as it's only recorded to individual level not within individual level
# Remove height rows
DURIN_VarPart_Height <- output3 %>% 
  filter(trait == "Plant Height (cm)")


VP_legend_title <- "Plant Height: Ecological Scales"
VP_Plot3<-ggplot(DURIN_VarPart_Height, 
                 aes(x=trait, y=value))+
  geom_col(aes(fill=Scale))+
  geom_text(aes(y=labypos, label=round(value,digits = 1)),colour="white", size = 5)+
  scale_fill_manual (VP_legend_title, values = c("#86b4ce","#306489","#222B4C","#AD8CAE"),
                     labels = c("Between individuals + Unexplained",
                                "Between habitats within sites within species",
                                "Between sites within species",
                                "Between species"))+
  ylab("Proportion of Variance (%)")+
  xlab("Log (natural) Transformed Traits")+
  blank_theme+
  coord_flip() +
  labs(fill = "Plant Height: Ecological Scale")+
  scale_y_continuous(expand=c(0,0),limits=c(0,100.1))+#this forces the graph to actually start at 0% and end at 100%
  scale_x_discrete(limits = c("Plant Height (cm)")) +
  theme(axis.text.x = element_text(angle = 300, hjust = 0))
VP_Plot3


# Plot side by side
(VP_DURIN_Combined <- ggarrange(VP_Plot2
                     , VP_Plot3 + rremove("ylab"),
                     ncol = 1, nrow = 2,
          legend = "bottom", labels = c("A", "B"),
          common.legend = FALSE))

#combining plots

VP_Plot2.legend<- get_legend(VP_Plot2)  #gets the legend from each plot
VP_Plot3.legend<- get_legend(VP_Plot3)

temp.plots<- plot_grid(VP_Plot2 + theme(legend.position = "none"),
                       VP_Plot3 + theme(legend.position = "none") + xlab(NULL),
                       ncol=1, 
                       align = 'hv',
                       rel_heights = c(1,0.3),
                       rel_widths = c(1,1))

temp.legend<-plot_grid(VP_Plot2.legend,
                       VP_Plot3.legend,
                       align = 'hv',
                       rel_heights = c(0.5,1),
                       nrow = 2)
plot_grid(temp.plots,
          temp.legend,
          rel_widths =  c(1,0.5),
          ncol = 2)

# ggsave ("VP.jpeg",
#         width = 6.5, height=5, units = "in",
#         dpi = 800)
```

